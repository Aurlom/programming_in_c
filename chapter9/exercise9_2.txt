Why could the condition in Program 9.4 while loop (s1[i] == s2 [i]  &&  s1[i] != '\0' &&  s2[i] != '\0')
be replaced with just s1[i] == s2 [i]  &&  s1[i] != '\0'?

This can be done because if s2 reaches a null character first, the equality operator will already evaluate
zero and end the loop. At the same time, the only time the != '\0' condition is necessary is when the strings
are equivalent and thus reach the null character at the same time in the loop, so either s1 or s2 could be
evaluated to give the appropriate end. The followup expression (if s1[i] == '\0'  &&  s2[i] == '\0') explicitly 
tests if both strings are at the null character and will show if they were equivalent, or if one was simply a 
substring of the other.